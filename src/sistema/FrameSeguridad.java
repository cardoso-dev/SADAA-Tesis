/*
 * FrameSeguridad.java
 *   Encargado de elegir que acciones requieren autentificacion por password
 * Parte de proyecto: SADAA
 * Author: Pedro Cardoso Rodriguez
 * Mail: ingpedro@live.com
 * Place: Zacatecas Mexico
 * 
    Copyright © 2010 Pedro Cardoso Rodriguez

    SADAA is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or any 
    later version.

    SADAA is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with SADAA.  If not, see <http://www.gnu.org/licenses/>
 */

package sistema;

import definiciones.TipoMensaje;

/** Encargado de manejar parametros de seguridad del sistema
 * 
 * @author Pedro Cardoso Rodríguez
 */
public class FrameSeguridad extends sistema.ModeloFrameInterno{
    
    private ListenChanges listenCh;
    
    /** Crea una nueva FrameSeguridad
     * @param ventana Referencia a la ventana principal contenedora (clase sistema.FramePrincipal)
     */
    public FrameSeguridad(sistema.FramePrincipal ventana){
        super(ventana,"seguridad.png");
        initComponents();
        String[] datos = database.Consultas.consultaUnCampo("select Altas,Bajas,Cambios,Consultas from DatosSeg;",false);
        if(datos!=null){
            jckCrea.setSelected(datos[0].equals("true"));
            jckElim.setSelected(datos[1].equals("true"));
            jckModif.setSelected(datos[2].equals("true"));
            jckBus.setSelected(datos[3].equals("true"));
        }
        else{
            muestraMensaje("Error al tratar de consultar el servidor", database.Consultas.obtenError(),TipoMensaje.ERROR);
        }
        setCambios(false);
        escuchaCambios();
    }    
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jckCrea = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jckModif = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jckBus = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jckElim = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtPsActu = new javax.swing.JPasswordField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtPsNu1 = new javax.swing.JPasswordField();
        txtPsNu2 = new javax.swing.JPasswordField();
        btnGuarda = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setIconifiable(true);
        setTitle("Seguridad");

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Solicitar password de seguridad al realizar las siguientes acciones:");

        jckCrea.setText("Creación de nuevos registros");
        jckCrea.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jckCreaItemStateChanged(evt);
            }
        });

        jLabel2.setText("Alta de datos de alumnos, grupos, materias, sesiones, bibliografía.");

        jckModif.setText("Modificación de registros");
        jckModif.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jckModifItemStateChanged(evt);
            }
        });

        jLabel4.setText("Actualización de datos de alumnos, grupos, sesiones, guardar asistencias.");

        jckBus.setText("Búsqueda y visualización de datos");
        jckBus.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jckBusItemStateChanged(evt);
            }
        });

        jLabel5.setText("Búsqueda de registros de alumnos, grupos, sesiones, fichas bibliográficas.");

        jckElim.setText("Eliminación de datos");
        jckElim.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jckElimItemStateChanged(evt);
            }
        });

        jLabel7.setText("Eliminación de registros de alumnos, grupos, sesiones, fichas bibliográficas.");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Password de seguridad:");

        jLabel6.setText("  Password actual:");

        jLabel8.setText("* Nuevo Password:");

        jLabel9.setText("* Confirmar:");

        btnGuarda.setText("Guardar");
        btnGuarda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardaActionPerformed(evt);
            }
        });

        jLabel10.setText("* Campos nuevo y confirmar llene solo si desea cambiar el password actual");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel7))
                    .addComponent(jckElim)
                    .addComponent(jckBus)
                    .addComponent(jckModif)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
                    .addComponent(jckCrea)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel5))
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 412, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPsActu, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtPsNu2, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnGuarda))
                            .addComponent(txtPsNu1, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(21, 21, 21)
                            .addComponent(jLabel4)))
                    .addComponent(jLabel10))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jckCrea)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jckModif)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jckBus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jckElim)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtPsActu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtPsNu1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtPsNu2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnGuarda))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /** Establece la bandera de hayCambios (cambios sin guardar) a verdadero
     * @param evt El ItemEvent que genero el evento
     */
    private void jckBusItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jckBusItemStateChanged
        setCambios(true);
    }//GEN-LAST:event_jckBusItemStateChanged

    /** Establece la bandera de hayCambios (cambios sin guardar) a verdadero
     * @param evt El ItemEvent que genero el evento
     */
    private void jckCreaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jckCreaItemStateChanged
        setCambios(true);
    }//GEN-LAST:event_jckCreaItemStateChanged

    /** Establece la bandera de hayCambios (cambios sin guardar) a verdadero
     * @param evt El ItemEvent que genero el evento
     */
    private void jckModifItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jckModifItemStateChanged
        setCambios(true);
    }//GEN-LAST:event_jckModifItemStateChanged

    /** Establece la bandera de hayCambios (cambios sin guardar) a verdadero
     * @param evt El ItemEvent que genero el evento
     */
    private void jckElimItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jckElimItemStateChanged
        setCambios(true);
    }//GEN-LAST:event_jckElimItemStateChanged

    /** Llama al metodo que guarda los cambios en los datos
     * @param evt El ActionEvent que genero el evento
     */
    private void btnGuardaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardaActionPerformed
        if(guardaCambios()){
            muestraMensaje("Acción realizada","Se ha actualizado el registro",TipoMensaje.INFORMACION);
        }
    }//GEN-LAST:event_btnGuardaActionPerformed
    
    /** Guarda los parametros de seguridad en la base de datos
     * @return true si los datos se guardaron correctamente false en caso contrario
     */
    @Override
    public boolean guardaCambios(){
        // validar
        char[] psact=txtPsActu.getPassword();
        char[] psn1=txtPsNu1.getPassword();
        char[] psn2=txtPsNu2.getPassword();
        boolean bandera=false;
        String[] datos=new String[6];
        if(psact.length==0){
            muestraMensaje("Error","Debe proporcionar el password actual",TipoMensaje.ERROR); 
            return false;
        }
        datos[4]=datos[5]="";
        for(int m=0;m<psact.length;m++) datos[4]+=""+psact[m];        
        if(psn1.length!=0||psn2.length!=0){
            bandera=(psn1.length!=psn2.length);
            if(!bandera){
                for(int q=0;q<psn1.length;q++){
                    bandera=(psn1[q]!=psn2[q]);                    
                    datos[5]+=""+psn1[q];
                    if(bandera) break;
                }
            }
            if(bandera){
                muestraMensaje("Error","La confirmación del nuevo password es incorrecta",TipoMensaje.ERROR);
                return false;
            }
        }
        datos[0]=""+jckCrea.isSelected();
        datos[1]=""+jckElim.isSelected();
        datos[2]=""+jckModif.isSelected();
        datos[3]=""+jckBus.isSelected();        
        if(datos[5].equals("")) datos[5]=datos[4];
        if(!database.Actualiza.actuSelSeg(datos)){
                muestraMensaje("Error al tratar de actualizar el registro",database.Actualiza.obtenError(),TipoMensaje.ERROR);
                return false;
        }
        else{
            database.Conexion.cargaPrefSeg();
            setCambios(false);
            return true;
        }
    }
    
    /**Crea un listener para escuchar si hay cambios en los controles de texto*/
    private void escuchaCambios(){
        listenCh= new ListenChanges();
        txtPsActu.getDocument().addDocumentListener(listenCh);
        txtPsNu1.getDocument().addDocumentListener(listenCh);
        txtPsNu2.getDocument().addDocumentListener(listenCh);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGuarda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JCheckBox jckBus;
    private javax.swing.JCheckBox jckCrea;
    private javax.swing.JCheckBox jckElim;
    private javax.swing.JCheckBox jckModif;
    private javax.swing.JPasswordField txtPsActu;
    private javax.swing.JPasswordField txtPsNu1;
    private javax.swing.JPasswordField txtPsNu2;
    // End of variables declaration//GEN-END:variables

    /** Clase que implementa la interfaz DocumentListener 
     * para detectar si hay edicion en los controles de texto y saber si hay 
     * cambios sin guardar en el registro
     */
    private class ListenChanges implements javax.swing.event.DocumentListener{
        /** Crea un nuevo objeto ListenChanges */
        public ListenChanges(){}
        /** Metodo de la interfaz DocumentListener
         * detecta si se inserto contenido al documento (contenido del control de texto)
         * y avisa al FrameSeguridad que hay cambios sin guardar
         * @param e El DocumentEvent que genero el evento
         */
        public void insertUpdate(javax.swing.event.DocumentEvent e){ 
            setCambios(true);
        }
        /** Metodo de la interfaz DocumentListener
         * detecta si se quito contenido al documento (contenido del control de texto)
         * y avisa al FrameSeguridad que hay cambios sin guardar
         * @param e El DocumentEvent que genero el evento
         */
        public void removeUpdate(javax.swing.event.DocumentEvent e){ 
            setCambios(true);
        }
        /** Metodo de la interfaz DocumentListener
         * detecta si cambio el contenido del documento (contenido del control de texto)
         * @param e El DocumentEvent que genero el evento
         */
        public void changedUpdate(javax.swing.event.DocumentEvent e){}
    }
}
