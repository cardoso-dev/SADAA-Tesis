/*
 * ControlTituloTab.java
 *  Control para implementar pestañas cerrables en un JTabbedPane
 * Parte de proyecto: SADAA
 * Author: Pedro Cardoso Rodriguez
 * Mail: ingpedro@live.com
 * Place: Zacatecas Mexico
 * 
    Copyright © 2010 Pedro Cardoso Rodriguez

    SADAA is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or any 
    later version.

    SADAA is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with SADAA.  If not, see <http://www.gnu.org/licenses/>
 */

package sistema;

import iconos.Iconos;

/** Crea un control para ser utilizado como tabcomponent en un jtabbedpane para que 
 *  la respectiva pestania (tab) sea cerrable por medio de un boton [X]
 * 
 * @author  Pedro Cardoso Rodriguez
 */
public class ControlTituloTab extends javax.swing.JPanel {    
    
    /**El titulo del tab*/
    private String titulo;
    /**El indice del tab dentro del jtabbedpane*/
    private int idx;
    
    /** Crea un nuevo ControlTituloTab
     * @param titulo El titulo del tab
     * @param descrip Descripcion del contenido del tab para ser utilizado como tooltiptext del tab
     * @param idx El indice del tab dentro del jtabbedpane
     */
    public ControlTituloTab(String titulo, String descrip, int idx) {
        initComponents();        
        this.titulo=titulo;
        this.idx=idx;
        lblTit.setText(titulo);
        btnCerrar.setIcon(Iconos.getIcono("cerrar.png"));
        setToolTipText(descrip);
        lblTit.setToolTipText(descrip);
    }
    
    /** CAmbia el indice del tab actual dentro del jtabbedpane
     * @param indice el nuevo indice del tab actual dentro del jtabbedpane
     */
    public void cambiaIndice(int indice){ idx=indice; }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTit = new javax.swing.JLabel();
        btnCerrar = new javax.swing.JButton();

        setOpaque(false);
        setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT, 2, 2));

        lblTit.setText("Etiqueta");
        lblTit.setPreferredSize(new java.awt.Dimension(68, 14));
        lblTit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblTitMouseClicked(evt);
            }
        });
        add(lblTit);

        btnCerrar.setToolTipText("Cerrar");
        btnCerrar.setFocusable(false);
        btnCerrar.setMargin(new java.awt.Insets(2, 2, 2, 2));
        btnCerrar.setMaximumSize(new java.awt.Dimension(16, 16));
        btnCerrar.setMinimumSize(new java.awt.Dimension(16, 16));
        btnCerrar.setOpaque(false);
        btnCerrar.setPreferredSize(new java.awt.Dimension(16, 16));
        btnCerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCerrarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCerrarMouseExited(evt);
            }
        });
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });
        add(btnCerrar);
    }// </editor-fold>//GEN-END:initComponents

    /** Obtiene el titulo actual del tab
     * @return el titulo actual del tab
     */
    public String getTitulo(){ return titulo; }
    
    /** Cierra el tab actual del jtabbedpane que lo contiene
     * @param evt El ActionEvent que genero el evento
     */
    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        java.awt.Container contenedor=this;
        do{
            contenedor = contenedor.getParent();
        }while(!(contenedor instanceof javax.swing.JTabbedPane));
        ((javax.swing.JTabbedPane)contenedor).remove(idx);
    }//GEN-LAST:event_btnCerrarActionPerformed

    /** Hace actual el tab dentro del jtabbedpane que lo contiene
     * @param evt El ActionEvent que genero el evento
     */
    private void lblTitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTitMouseClicked
        java.awt.Container contenedor=this;
        do{
            contenedor = contenedor.getParent();
        }while(!(contenedor instanceof javax.swing.JTabbedPane));
        ((javax.swing.JTabbedPane)contenedor).setSelectedIndex(idx);
    }//GEN-LAST:event_lblTitMouseClicked

    /** Cambia el icono del boton cerrar al salir el mouse del area del boton
     * @param evt El MouseEvent que genro el evento
     */
    private void btnCerrarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCerrarMouseExited
        btnCerrar.setIcon(Iconos.getIcono("cerrar.png"));
    }//GEN-LAST:event_btnCerrarMouseExited

    /** Cambia el icono del boton cerrar al entrar el mouse dentro del area del boton
     * @param evt El MouseEvent que genro el evento
     */
    private void btnCerrarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCerrarMouseEntered
        btnCerrar.setIcon(Iconos.getIcono("cerrarmo.png"));
    }//GEN-LAST:event_btnCerrarMouseEntered
        
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JLabel lblTit;
    // End of variables declaration//GEN-END:variables
    
}
