/*
 * FrameBusca.java
 *   Ventana busqueda de fichas bibliograficas y hemerograficas
 * Parte de proyecto: SADAA
 * Author: Pedro Cardoso Rodriguez
 * Mail: ingpedro@live.com
 * Place: Zacatecas Mexico
 * 
    Copyright © 2010 Pedro Cardoso Rodriguez

    SADAA is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or any 
    later version.

    SADAA is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with SADAA.  If not, see <http://www.gnu.org/licenses/>
 */

package bibliografia;

import definiciones.TipoMensaje;
import iconos.Iconos;
import operaciones.Datos;

/**  Es una ventana interna (JInternalFrame) la cual sirve para la busqueda de 
 *  registros de fichas bibliograficas o hemerograficas.
 * 
 * @author Pedro Cardoso Rodríguez
 */
public class FrameBusca extends sistema.ModeloFrameInterno{

    /** Guarda una descripcion del tipo de busqueda mas reciente */
    private String desc;
    
    /** Crea una nueva ventana FrameBusca
     * @param ventana Referencia a la ventana principal contenedora 
     *   (sistema.FramePrincipal)
     */
    public FrameBusca(sistema.FramePrincipal ventana) {
        super(ventana,"blibro.png");
        initComponents();
        btnBuscar.setIcon(Iconos.getIcono("busca.png"));
        btnLimpia.setIcon(Iconos.getIcono("borra.png"));
        cambiaCat(1);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        rbtnCatsFich = new javax.swing.ButtonGroup();
        rbtnCriterios = new javax.swing.ButtonGroup();
        pnlMnuSup = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        rbtnBibGen = new javax.swing.JRadioButton();
        rbtnHem = new javax.swing.JRadioButton();
        rbtnHemAn = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        rbtnAnyOne = new javax.swing.JRadioButton();
        btnBuscar = new javax.swing.JButton();
        pnlDtsBibGen = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtTitHG = new javax.swing.JTextField();
        txtAutHG = new javax.swing.JTextField();
        txtClaHG = new javax.swing.JTextField();
        txtEditHG = new javax.swing.JTextField();
        txtNumEdHG = new javax.swing.JTextField();
        txtLugCHG = new javax.swing.JTextField();
        txtPalClvHG = new javax.swing.JTextField();
        pnlOpcsInf = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        rbtnOnecCrit = new javax.swing.JRadioButton();
        rbtnTwoCrit = new javax.swing.JRadioButton();
        jSeparator2 = new javax.swing.JSeparator();
        btnLimpia = new javax.swing.JButton();
        pnlAnyOne = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        txtTitAO = new javax.swing.JTextField();
        txtAutAO = new javax.swing.JTextField();
        txtPalClvAO = new javax.swing.JTextField();
        pnlDtsHemAn = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        txtTitHA = new javax.swing.JTextField();
        txtAutHA = new javax.swing.JTextField();
        txtPubHA = new javax.swing.JTextField();
        txtClaHA = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        txtPalClvHA = new javax.swing.JTextField();
        pnlDtsHem = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtTitHM = new javax.swing.JTextField();
        txtDirHM = new javax.swing.JTextField();
        txtLgEdiHM = new javax.swing.JTextField();
        txtPalClvHM = new javax.swing.JTextField();

        setClosable(true);
        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setIconifiable(true);
        setTitle("Buscar ficha bibliográfica");
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("Elija la categoría de ficha a buscar:");

        rbtnCatsFich.add(rbtnBibGen);
        rbtnBibGen.setSelected(true);
        rbtnBibGen.setText("Bibliográfica general");
        rbtnBibGen.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbtnBibGenItemStateChanged(evt);
            }
        });

        rbtnCatsFich.add(rbtnHem);
        rbtnHem.setText("Hemeroteca general");
        rbtnHem.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbtnHemItemStateChanged(evt);
            }
        });

        rbtnCatsFich.add(rbtnHemAn);
        rbtnHemAn.setText("Hemeroteca analítica");
        rbtnHemAn.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbtnHemAnItemStateChanged(evt);
            }
        });

        jLabel2.setText("Parametros de busqueda:");

        rbtnCatsFich.add(rbtnAnyOne);
        rbtnAnyOne.setText("Cualquier referencia");
        rbtnAnyOne.setToolTipText("Buscar datos en cualquier tipo de ficha");
        rbtnAnyOne.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbtnAnyOneItemStateChanged(evt);
            }
        });

        btnBuscar.setMnemonic('B');
        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlMnuSupLayout = new javax.swing.GroupLayout(pnlMnuSup);
        pnlMnuSup.setLayout(pnlMnuSupLayout);
        pnlMnuSupLayout.setHorizontalGroup(
            pnlMnuSupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlMnuSupLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlMnuSupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 371, Short.MAX_VALUE)
                    .addComponent(jLabel1)
                    .addGroup(pnlMnuSupLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(pnlMnuSupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlMnuSupLayout.createSequentialGroup()
                                .addComponent(rbtnAnyOne)
                                .addGap(18, 18, 18)
                                .addComponent(rbtnHemAn)
                                .addGap(6, 6, 6)
                                .addComponent(btnBuscar))
                            .addGroup(pnlMnuSupLayout.createSequentialGroup()
                                .addComponent(rbtnBibGen)
                                .addGap(18, 18, 18)
                                .addComponent(rbtnHem))
                            .addComponent(jLabel2))
                        .addGap(24, 24, 24)))
                .addContainerGap())
        );
        pnlMnuSupLayout.setVerticalGroup(
            pnlMnuSupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlMnuSupLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlMnuSupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtnBibGen)
                    .addComponent(rbtnHem))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlMnuSupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtnAnyOne)
                    .addComponent(rbtnHemAn)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        getContentPane().add(pnlMnuSup, gridBagConstraints);

        jLabel3.setText("Titulo:");

        jLabel4.setText("Autor:");

        jLabel5.setText("Clasificación:");

        jLabel6.setText("Editorial:");

        jLabel7.setText("Numero de edición:");

        jLabel8.setText("Lugar de consulta:");

        jLabel9.setText("Palabras clave:");

        javax.swing.GroupLayout pnlDtsBibGenLayout = new javax.swing.GroupLayout(pnlDtsBibGen);
        pnlDtsBibGen.setLayout(pnlDtsBibGenLayout);
        pnlDtsBibGenLayout.setHorizontalGroup(
            pnlDtsBibGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDtsBibGenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDtsBibGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDtsBibGenLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txtTitHG, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDtsBibGenLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(txtAutHG, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDtsBibGenLayout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtClaHG, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDtsBibGenLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(18, 18, 18)
                        .addComponent(txtEditHG, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDtsBibGenLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNumEdHG, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDtsBibGenLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtLugCHG, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDtsBibGenLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(txtPalClvHG, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlDtsBibGenLayout.setVerticalGroup(
            pnlDtsBibGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDtsBibGenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDtsBibGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTitHG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDtsBibGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtAutHG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDtsBibGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtClaHG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDtsBibGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtEditHG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDtsBibGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtNumEdHG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDtsBibGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtLugCHG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDtsBibGenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtPalClvHG, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        getContentPane().add(pnlDtsBibGen, gridBagConstraints);

        jLabel10.setFont(new java.awt.Font("Tahoma", 2, 11));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Buscar fichas que cumplan con:");

        rbtnCriterios.add(rbtnOnecCrit);
        rbtnOnecCrit.setSelected(true);
        rbtnOnecCrit.setText("Al menos un criterio");

        rbtnCriterios.add(rbtnTwoCrit);
        rbtnTwoCrit.setText("Todos los criterios");

        btnLimpia.setText("Limpiar campos");
        btnLimpia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlOpcsInfLayout = new javax.swing.GroupLayout(pnlOpcsInf);
        pnlOpcsInf.setLayout(pnlOpcsInfLayout);
        pnlOpcsInfLayout.setHorizontalGroup(
            pnlOpcsInfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOpcsInfLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlOpcsInfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlOpcsInfLayout.createSequentialGroup()
                        .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 339, Short.MAX_VALUE)
                        .addGap(4, 4, 4))
                    .addGroup(pnlOpcsInfLayout.createSequentialGroup()
                        .addComponent(btnLimpia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE))
                    .addGroup(pnlOpcsInfLayout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(rbtnOnecCrit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rbtnTwoCrit)))
                .addContainerGap())
        );
        pnlOpcsInfLayout.setVerticalGroup(
            pnlOpcsInfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOpcsInfLayout.createSequentialGroup()
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlOpcsInfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLimpia)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlOpcsInfLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbtnOnecCrit)
                    .addComponent(rbtnTwoCrit))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        getContentPane().add(pnlOpcsInf, gridBagConstraints);

        jLabel20.setText("Titulo:");

        jLabel21.setText("Autor:");

        jLabel22.setText("Palabras Clave:");

        javax.swing.GroupLayout pnlAnyOneLayout = new javax.swing.GroupLayout(pnlAnyOne);
        pnlAnyOne.setLayout(pnlAnyOneLayout);
        pnlAnyOneLayout.setHorizontalGroup(
            pnlAnyOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAnyOneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAnyOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlAnyOneLayout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTitAO, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlAnyOneLayout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtAutAO, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlAnyOneLayout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPalClvAO, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlAnyOneLayout.setVerticalGroup(
            pnlAnyOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAnyOneLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAnyOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(txtTitAO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAnyOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(txtAutAO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAnyOneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(txtPalClvAO, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        getContentPane().add(pnlAnyOne, gridBagConstraints);

        jLabel15.setText("Titulo:");

        jLabel16.setText("Autor:");

        jLabel17.setText("En publicación:");

        jLabel18.setText("Clasificación:");

        jLabel19.setText("Palabras clave:");

        javax.swing.GroupLayout pnlDtsHemAnLayout = new javax.swing.GroupLayout(pnlDtsHemAn);
        pnlDtsHemAn.setLayout(pnlDtsHemAnLayout);
        pnlDtsHemAnLayout.setHorizontalGroup(
            pnlDtsHemAnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDtsHemAnLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDtsHemAnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDtsHemAnLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addComponent(txtTitHA, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDtsHemAnLayout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addGap(18, 18, 18)
                        .addComponent(txtAutHA, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDtsHemAnLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPubHA, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDtsHemAnLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtClaHA, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDtsHemAnLayout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPalClvHA, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlDtsHemAnLayout.setVerticalGroup(
            pnlDtsHemAnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDtsHemAnLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDtsHemAnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtTitHA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDtsHemAnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtAutHA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDtsHemAnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txtPubHA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDtsHemAnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel18)
                    .addComponent(txtClaHA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDtsHemAnLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txtPalClvHA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        getContentPane().add(pnlDtsHemAn, gridBagConstraints);

        jLabel11.setText("Titulo de la publicación:");

        jLabel12.setText("Director:");

        jLabel13.setText("Lugar de edición:");

        jLabel14.setText("Palabras clave:");

        javax.swing.GroupLayout pnlDtsHemLayout = new javax.swing.GroupLayout(pnlDtsHem);
        pnlDtsHem.setLayout(pnlDtsHemLayout);
        pnlDtsHemLayout.setHorizontalGroup(
            pnlDtsHemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDtsHemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDtsHemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDtsHemLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(txtDirHM, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDtsHemLayout.createSequentialGroup()
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtLgEdiHM, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDtsHemLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtTitHM, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlDtsHemLayout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPalClvHM, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlDtsHemLayout.setVerticalGroup(
            pnlDtsHemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDtsHemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDtsHemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtTitHM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDtsHemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtDirHM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDtsHemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtLgEdiHM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDtsHemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtPalClvHM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        getContentPane().add(pnlDtsHem, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /** Cambia los controles para adecuar la busqueda a ficha bibliografica general
     * @param evt El ItemEvent que genero el evento
     */
    private void rbtnBibGenItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbtnBibGenItemStateChanged
        cambiaCat(1);
    }//GEN-LAST:event_rbtnBibGenItemStateChanged

    /** Cambia los controles para adecuar la busqueda a ficha hemerografica general
     * @param evt El ItemEvent que genero el evento
     */
    private void rbtnHemItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbtnHemItemStateChanged
        cambiaCat(2);
    }//GEN-LAST:event_rbtnHemItemStateChanged

    /** Cambia los controles para adecuar la busqueda a ficha hemerografica analitica
     * @param evt El ItemEvent que genero el evento
     */
    private void rbtnHemAnItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbtnHemAnItemStateChanged
        cambiaCat(3);
    }//GEN-LAST:event_rbtnHemAnItemStateChanged

    /** Llama al metodo que valida los parametros de busqueda y forma la sentencia sql
     *   de busqueda, si los datos son validos hace la busqueda con la sentencia obtenida
     *   y muestra los registros encontrados, si encuentra uno solo muestra directamente la
     *   ficha correspondiente si encuentra dos o mas muestra una tabla 
     *   (ver sistema.FrameBusquedas) si no encuentra registro o hay error al consultar 
     *   muestra mensaje indicandolo.
     * @param evt El ActionEvent que genero el evento
     */
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        String sen;
        int clave;
        javax.swing.table.DefaultTableModel modTabla1;
        javax.swing.table.DefaultTableModel modTablaA;
        String[] acols;
        String[] mnus={"Abrir ficha"};
        if(!rbtnAnyOne.isSelected()){
            sen=mkSentencia();
            if(sen==null) return;
            modTabla1=database.Consultas.consTipoTable(sen,true);
            if(modTabla1==null)
                muestraMensaje("Error al tratar de consultar el servidor", database.Consultas.obtenError(),TipoMensaje.ERROR);
            else if(modTabla1.getRowCount()==0)
                muestraMensaje("Resultados de la busqueda", "No hubo resultados para esta busqueda",TipoMensaje.INFORMACION);
            else if(modTabla1.getRowCount()==1){
                clave=Integer.parseInt(""+modTabla1.getValueAt(0,0));
                if(rbtnBibGen.isSelected()){
                    getPrincipalVnt().agregaFichaBiliografica(clave,1);
                }
                else if(rbtnHem.isSelected()){
                    getPrincipalVnt().agregaFichaBiliografica(clave,2);
                }
                else{
                    getPrincipalVnt().agregaFichaBiliografica(clave,3);
                }
            } 
            else{
                if(rbtnBibGen.isSelected()){
                    acols=new String[8]; 
                    acols[0]="Clave"; acols[1]="40"; acols[2]="Titulo"; acols[3]="190";
                    acols[4]="Autor"; acols[5]="140"; acols[6]="Clasificacion"; acols[7]="105";
                    sen="Bibliografica general";
                }
                else if(rbtnHem.isSelected()){
                    acols=new String[6]; 
                    acols[0]="Clave"; acols[1]="40"; acols[2]="Titulo"; acols[3]="190";
                    acols[4]="Director"; acols[5]="140"; 
                    sen="Hemeroteca general";
                }
                else{
                    acols=new String[6]; 
                    acols[0]="Clave"; acols[1]="40"; acols[2]="Titulo"; acols[3]="190";
                    acols[4]="Autor"; acols[5]="140"; acols[4]="Clasificacion"; acols[5]="105";
                    acols[4]="En publicacion"; acols[5]="88";
                    sen="Hemeroteca analitica";
                }
                cargaBusqueda(modTabla1,sen,desc,acols,mnus,false);
            }
        }
        else{
            sen=mkSentenciaSpecial(1);
            if(sen==null) return;
            modTabla1=database.Consultas.consTipoTable(sen,true);
            if(modTabla1==null){
                muestraMensaje("Error al tratar de consultar el servidor", database.Consultas.obtenError(),TipoMensaje.ERROR);
                return;
            }
            modTabla1.addColumn("Tipo de ficha");
            for(int h=0;h<modTabla1.getRowCount();h++)
                modTabla1.setValueAt("Bibliografica general",h,modTabla1.getColumnCount()-1);
            modTablaA=database.Consultas.consTipoTable(mkSentenciaSpecial(2),true);
            if(modTablaA==null){
                muestraMensaje("Error al tratar de consultar el servidor", database.Consultas.obtenError(),TipoMensaje.ERROR);
                return;
            }
            for(int y=0;y<modTablaA.getRowCount();y++){
                String[] temp=new String[4];
                temp[0]=""+modTablaA.getValueAt(y,0);
                temp[1]=""+modTablaA.getValueAt(y,1);
                temp[2]=""; temp[3]="Hemeroteca general";
                modTabla1.addRow(temp);
            }
            modTablaA=database.Consultas.consTipoTable(mkSentenciaSpecial(3),true);
            if(modTablaA==null){
                muestraMensaje("Error al tratar de consultar el servidor", database.Consultas.obtenError(),TipoMensaje.ERROR);
                return;
            }
            for(int y=0;y<modTablaA.getRowCount();y++){
                String[] temp=new String[4];
                temp[0]=""+modTablaA.getValueAt(y,0);
                temp[1]=""+modTablaA.getValueAt(y,1);
                temp[2]=""+modTablaA.getValueAt(y,2); 
                temp[3]="Hemeroteca analitica"; modTabla1.addRow(temp);
            }
            if(modTabla1.getRowCount()==0)
                muestraMensaje("Resultados de la busqueda", "No hubo resultados para esta busqueda",TipoMensaje.INFORMACION);
            else if(modTabla1.getRowCount()==1){
                clave=Integer.parseInt(""+modTabla1.getValueAt(0,0));
                if((""+modTabla1.getValueAt(0,3)).startsWith("Bibliografica")){
                    getPrincipalVnt().agregaFichaBiliografica(clave,1);
                }
                else if((""+modTabla1.getValueAt(0,3)).startsWith("Hemeroteca g")){
                    getPrincipalVnt().agregaFichaBiliografica(clave,2);
                }
                else{
                    getPrincipalVnt().agregaFichaBiliografica(clave,3);
                }
            } 
            else{
                acols=new String[8]; acols[0]="Clave"; acols[1]="40";
                acols[2]="Titulo"; acols[3]="190"; acols[4]="Autor"; 
                acols[5]="140"; acols[6]="Tipo de ficha"; acols[7]="106";
                cargaBusqueda(modTabla1,"Fichas Biliograficas",desc,acols,mnus,false);
            }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    /** Cambia los controles para adecuar la busqueda a cualquier referencia
     * @param evt El ItemEvent que genero el evento
     */
    private void rbtnAnyOneItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbtnAnyOneItemStateChanged
        cambiaCat(4);
    }//GEN-LAST:event_rbtnAnyOneItemStateChanged
    
    /** Limpia el contenido de los controles (texto) para ingresar nuevos parametros de busqueda
     * @param evt El ActionEvent que genero el evento
     */
    private void btnLimpiaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiaActionPerformed
        if(rbtnBibGen.isSelected()){
            txtTitHG.setText(""); txtAutHG.setText(""); txtClaHG.setText("");
            txtEditHG.setText(""); txtNumEdHG.setText(""); txtLugCHG.setText("");
            txtPalClvHG.setText("");
        }
        else if(rbtnHem.isSelected()){
            txtTitHM.setText(""); txtDirHM.setText("");txtLgEdiHM.setText("");
            txtPalClvHM.setText("");
        }
        else if(rbtnHemAn.isSelected()){
            txtTitHA.setText(""); txtAutHA.setText(""); txtPubHA.setText("");
            txtClaHA.setText(""); txtPalClvHA.setText("");
        }
        else{
            txtTitAO.setText(""); txtAutAO.setText(""); txtPalClvAO.setText("");
        }
    }//GEN-LAST:event_btnLimpiaActionPerformed
     
    /** Forma la sentencia de busqueda de acuerdo a las opciones del formulario (excepto cuando esta 
     *   la opcion cualquier referencia) al hacerlo va validando los datos si hay error en alguno regresa null 
     * @return la sentencia o null si hay error en algun dato
     */
    private String mkSentencia(){
        String sen;
        String donde="";
        String aux;
        String union=(rbtnOnecCrit.isSelected()?" or ":" and ");
        desc="";
        // Validar parametros e ir formando la sentencia de busqueda
        if(rbtnBibGen.isSelected()){
            sen="select ClvFBib as 'Clave', Titulo, Autor, Clasificacion from FBibl where ";
            if((aux=txtTitHG.getText().trim()).length()>0) donde+=Datos.formaCondicion("Titulo",aux,true);
            desc+=(aux.equals("")?"":"(Titulo,"+aux+")");
            if((aux=txtAutHG.getText().trim()).length()>0) 
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("Autor",aux,true);
            desc+=(aux.equals("")?"":"(Autor,"+aux+")");
            if((aux=txtClaHG.getText().trim()).length()>0) 
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("Clasificacion",aux,true);
            desc+=(aux.equals("")?"":"(Calsificacion,"+aux+")");
            if((aux=txtEditHG.getText().trim()).length()>0) 
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("NomEdit",aux,true);
            desc+=(aux.equals("")?"":"(Editorial,"+aux+")");
            if((aux=txtNumEdHG.getText().trim()).length()>0){
                try{ Integer.parseInt(aux); }
                catch(NumberFormatException nfbExc){
                    muestraMensaje("Error en los parametros","Numero de edicion invalido",TipoMensaje.ERROR);
                    return null; }
                donde+=(donde.equals("")?"":union)+"NumEdit="+aux;
                desc+=(aux.equals("")?"":"(Edicion numero,"+aux+")");
            }
            if((aux=txtLugCHG.getText().trim()).length()>0) 
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("RefLugCon",aux,true);
            desc+=(aux.equals("")?"":"(Lugar de consulta,"+aux+")");
            if((aux=txtPalClvHG.getText().trim()).length()>0){
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("Titulo",aux,true);
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("Clasificacion",aux,true);
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("Resumen",aux,true);
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("KeyWords",aux,true);
            }
            desc+=(aux.equals("")?"":"(Palabras clave,"+aux+")");
            if(donde.equals("")){
                muestraMensaje("Error en los parametros","Debe indicar al menos un parametro",TipoMensaje.ERROR);
                return null; }
        }
        else if(rbtnHem.isSelected()){
            sen="select ClvHem as 'Clave', Titulo, NomDir as 'Director' from FHeme where ";
            if((aux=txtTitHM.getText().trim()).length()>0) donde+=Datos.formaCondicion("Titulo",aux,true);
            desc+=(aux.equals("")?"":"(Titulo,"+aux+")");
            if((aux=txtDirHM.getText().trim()).length()>0) 
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("NomDir",aux,true);
            desc+=(aux.equals("")?"":"(Director,"+aux+")");
            if((aux=txtLgEdiHM.getText().trim()).length()>0) 
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("LugEd",aux,true);
            desc+=(aux.equals("")?"":"(Lugar de edicion,"+aux+")");
            if((aux=txtPalClvHM.getText().trim()).length()>0){
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("Titulo",aux,true);
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("KeyWords",aux,true);
            }
            desc+=(aux.equals("")?"":"(Palabras clave,"+aux+")");
            if(donde.equals("")){
                muestraMensaje("Error en los parametros","Debe indicar al menos un parametro",TipoMensaje.ERROR);
                return null; }
        }
        else{
            sen="select ClvHmAn as 'Clave', Titulo, Autor, Clasificacion, NomPub as 'En publicacion',";
            sen+=" Fcha as 'Fecha', Paginas from FHeman where ";
            if((aux=txtTitHA.getText().trim()).length()>0) donde+=Datos.formaCondicion("Titulo",aux,true);
            desc+=(aux.equals("")?"":"(Titulo,"+aux+")");
            if((aux=txtAutHA.getText().trim()).length()>0) 
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("Autor",aux,true);
            desc+=(aux.equals("")?"":"(Autor,"+aux+")");
            if((aux=txtPubHA.getText().trim()).length()>0) 
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("NomPub",aux,true);
            desc+=(aux.equals("")?"":"(Publicacion,"+aux+")");
            if((aux=txtClaHA.getText().trim()).length()>0)
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("Clasificacion",aux,true);
            desc+=(aux.equals("")?"":"(Clasificacion,"+aux+")");
            if((aux=txtPalClvHA.getText().trim()).length()>0){
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("Titulo",aux,true);
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("Clasificacion",aux,true);
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("Resumen",aux,true);
            }
            desc+=(aux.equals("")?"":"(Palabras clave,"+aux+")");
            if(donde.equals("")){
                muestraMensaje("Error en los parametros","Debe indicar al menos un parametro",TipoMensaje.ERROR);
                return null; }
        }
        return sen+donde;
    }
    
    /** Forma la sentencia de busqueda para la opcion cualquier referencia lohace de forma que los campos 
     *   sean compatibles para los tres tipos diferentes de fichas
     * @param tabla Indica el tipo de ficha a forma sentencia 1 para bibliografica, 
     *   2 para hemerografica general y 3 para hemerografica analitica
     * @return la sentencia o null si hay error en algun dato
     */
    private String mkSentenciaSpecial(int tabla){
        String sen="", aux, donde="";
        String union=(rbtnOnecCrit.isSelected()?" or ":" and ");
        desc="";
        if(tabla==1){
            sen="select ClvFBib as 'Clave', Titulo, Autor from FBibl where ";
            if((aux=txtTitAO.getText().trim()).length()>0) donde+=Datos.formaCondicion("Titulo",aux,true);
            if((aux=txtAutAO.getText().trim()).length()>0) 
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("Autor",aux,true);
            if((aux=txtPalClvAO.getText().trim()).length()>0){
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("Titulo",aux,true);
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("Clasificacion",aux,true);
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("Resumen",aux,true);
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("KeyWords",aux,true);
            }
            if(donde.equals("")){
                muestraMensaje("Error en los parametros","Debe indicar al menos un parametro",TipoMensaje.ERROR);
                return null; }
        }
        else if(tabla==2){
            sen="select ClvHem as 'Clave', Titulo from FHeme where ";
            if((aux=txtTitAO.getText().trim()).length()>0) donde+=Datos.formaCondicion("Titulo",aux,true);
            if((aux=txtPalClvAO.getText().trim()).length()>0){
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("Titulo",aux,true);
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("Comentario",aux,true);
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("KeyWords",aux,true);
            }
            if(donde.equals("")) return "";
        }
        else{
            sen="select ClvHmAn as 'Clave', Titulo, Autor from FHemAn where ";
            if((aux=txtTitAO.getText().trim()).length()>0) donde+=Datos.formaCondicion("Titulo",aux,true);
            desc+=(aux.equals("")?"":"(Titulo,"+aux+")");
            if((aux=txtAutAO.getText().trim()).length()>0) 
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("Autor",aux,true);
            desc+=(aux.equals("")?"":"(Autor,"+aux+")");
            if((aux=txtPalClvAO.getText().trim()).length()>0){
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("Titulo",aux,true);
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("Clasificacion",aux,true);
                donde+=(donde.equals("")?"":union)+Datos.formaCondicion("Resumen",aux,true);
            }
            desc+=(aux.equals("")?"":"(Palabras clave,"+aux+")");
        }
        return sen+donde;
    }
        
    /** Cambia los controles para adecuar la busqueda al tipo de ficha elegida
     * @param cat tipo de ficha elegida donde: 1=bibliografico general, 
     *   2=hemeroteca general, 3=hemeroteca analitica y 4=Cualquier referencia
     */
    private void cambiaCat(int cat){
        pnlDtsBibGen.setVisible(cat==1);
        pnlDtsHem.setVisible(cat==2);
        pnlDtsHemAn.setVisible(cat==3);
        pnlAnyOne.setVisible(cat==4);
        pack();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnLimpia;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPanel pnlAnyOne;
    private javax.swing.JPanel pnlDtsBibGen;
    private javax.swing.JPanel pnlDtsHem;
    private javax.swing.JPanel pnlDtsHemAn;
    private javax.swing.JPanel pnlMnuSup;
    private javax.swing.JPanel pnlOpcsInf;
    private javax.swing.JRadioButton rbtnAnyOne;
    private javax.swing.JRadioButton rbtnBibGen;
    private javax.swing.ButtonGroup rbtnCatsFich;
    private javax.swing.ButtonGroup rbtnCriterios;
    private javax.swing.JRadioButton rbtnHem;
    private javax.swing.JRadioButton rbtnHemAn;
    private javax.swing.JRadioButton rbtnOnecCrit;
    private javax.swing.JRadioButton rbtnTwoCrit;
    private javax.swing.JTextField txtAutAO;
    private javax.swing.JTextField txtAutHA;
    private javax.swing.JTextField txtAutHG;
    private javax.swing.JTextField txtClaHA;
    private javax.swing.JTextField txtClaHG;
    private javax.swing.JTextField txtDirHM;
    private javax.swing.JTextField txtEditHG;
    private javax.swing.JTextField txtLgEdiHM;
    private javax.swing.JTextField txtLugCHG;
    private javax.swing.JTextField txtNumEdHG;
    private javax.swing.JTextField txtPalClvAO;
    private javax.swing.JTextField txtPalClvHA;
    private javax.swing.JTextField txtPalClvHG;
    private javax.swing.JTextField txtPalClvHM;
    private javax.swing.JTextField txtPubHA;
    private javax.swing.JTextField txtTitAO;
    private javax.swing.JTextField txtTitHA;
    private javax.swing.JTextField txtTitHG;
    private javax.swing.JTextField txtTitHM;
    // End of variables declaration//GEN-END:variables
    
}
